/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GET request for account data
 */
@ApiModel(description = "GET request for account data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class AccountDataResponse {
  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private String balance;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private String locked;

  public static final String SERIALIZED_NAME_UNLOCK_HEIGHT = "unlock_height";
  @SerializedName(SERIALIZED_NAME_UNLOCK_HEIGHT)
  private Integer unlockHeight;

  public static final String SERIALIZED_NAME_NONCE = "nonce";
  @SerializedName(SERIALIZED_NAME_NONCE)
  private Integer nonce;

  public static final String SERIALIZED_NAME_BALANCE_PROOF = "balance_proof";
  @SerializedName(SERIALIZED_NAME_BALANCE_PROOF)
  private String balanceProof;

  public static final String SERIALIZED_NAME_NONCE_PROOF = "nonce_proof";
  @SerializedName(SERIALIZED_NAME_NONCE_PROOF)
  private String nonceProof;

  public AccountDataResponse() { 
  }

  public AccountDataResponse balance(String balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBalance() {
    return balance;
  }


  public void setBalance(String balance) {
    this.balance = balance;
  }


  public AccountDataResponse locked(String locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getLocked() {
    return locked;
  }


  public void setLocked(String locked) {
    this.locked = locked;
  }


  public AccountDataResponse unlockHeight(Integer unlockHeight) {
    
    this.unlockHeight = unlockHeight;
    return this;
  }

   /**
   * Get unlockHeight
   * @return unlockHeight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUnlockHeight() {
    return unlockHeight;
  }


  public void setUnlockHeight(Integer unlockHeight) {
    this.unlockHeight = unlockHeight;
  }


  public AccountDataResponse nonce(Integer nonce) {
    
    this.nonce = nonce;
    return this;
  }

   /**
   * Get nonce
   * @return nonce
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNonce() {
    return nonce;
  }


  public void setNonce(Integer nonce) {
    this.nonce = nonce;
  }


  public AccountDataResponse balanceProof(String balanceProof) {
    
    this.balanceProof = balanceProof;
    return this;
  }

   /**
   * Get balanceProof
   * @return balanceProof
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBalanceProof() {
    return balanceProof;
  }


  public void setBalanceProof(String balanceProof) {
    this.balanceProof = balanceProof;
  }


  public AccountDataResponse nonceProof(String nonceProof) {
    
    this.nonceProof = nonceProof;
    return this;
  }

   /**
   * Get nonceProof
   * @return nonceProof
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getNonceProof() {
    return nonceProof;
  }


  public void setNonceProof(String nonceProof) {
    this.nonceProof = nonceProof;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDataResponse accountDataResponse = (AccountDataResponse) o;
    return Objects.equals(this.balance, accountDataResponse.balance) &&
        Objects.equals(this.locked, accountDataResponse.locked) &&
        Objects.equals(this.unlockHeight, accountDataResponse.unlockHeight) &&
        Objects.equals(this.nonce, accountDataResponse.nonce) &&
        Objects.equals(this.balanceProof, accountDataResponse.balanceProof) &&
        Objects.equals(this.nonceProof, accountDataResponse.nonceProof);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balance, locked, unlockHeight, nonce, balanceProof, nonceProof);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDataResponse {\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    unlockHeight: ").append(toIndentedString(unlockHeight)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    balanceProof: ").append(toIndentedString(balanceProof)).append("\n");
    sb.append("    nonceProof: ").append(toIndentedString(nonceProof)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

