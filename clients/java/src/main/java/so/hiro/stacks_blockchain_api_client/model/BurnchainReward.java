/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Reward payment made on the burnchain
 */
@ApiModel(description = "Reward payment made on the burnchain")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class BurnchainReward {
  public static final String SERIALIZED_NAME_CANONICAL = "canonical";
  @SerializedName(SERIALIZED_NAME_CANONICAL)
  private Boolean canonical;

  public static final String SERIALIZED_NAME_BURN_BLOCK_HASH = "burn_block_hash";
  @SerializedName(SERIALIZED_NAME_BURN_BLOCK_HASH)
  private String burnBlockHash;

  public static final String SERIALIZED_NAME_BURN_BLOCK_HEIGHT = "burn_block_height";
  @SerializedName(SERIALIZED_NAME_BURN_BLOCK_HEIGHT)
  private Integer burnBlockHeight;

  public static final String SERIALIZED_NAME_BURN_AMOUNT = "burn_amount";
  @SerializedName(SERIALIZED_NAME_BURN_AMOUNT)
  private String burnAmount;

  public static final String SERIALIZED_NAME_REWARD_RECIPIENT = "reward_recipient";
  @SerializedName(SERIALIZED_NAME_REWARD_RECIPIENT)
  private String rewardRecipient;

  public static final String SERIALIZED_NAME_REWARD_AMOUNT = "reward_amount";
  @SerializedName(SERIALIZED_NAME_REWARD_AMOUNT)
  private String rewardAmount;

  public static final String SERIALIZED_NAME_REWARD_INDEX = "reward_index";
  @SerializedName(SERIALIZED_NAME_REWARD_INDEX)
  private Integer rewardIndex;

  public BurnchainReward() { 
  }

  public BurnchainReward canonical(Boolean canonical) {
    
    this.canonical = canonical;
    return this;
  }

   /**
   * Set to &#x60;true&#x60; if block corresponds to the canonical burchchain tip
   * @return canonical
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Set to `true` if block corresponds to the canonical burchchain tip")

  public Boolean getCanonical() {
    return canonical;
  }


  public void setCanonical(Boolean canonical) {
    this.canonical = canonical;
  }


  public BurnchainReward burnBlockHash(String burnBlockHash) {
    
    this.burnBlockHash = burnBlockHash;
    return this;
  }

   /**
   * The hash representing the burnchain block
   * @return burnBlockHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The hash representing the burnchain block")

  public String getBurnBlockHash() {
    return burnBlockHash;
  }


  public void setBurnBlockHash(String burnBlockHash) {
    this.burnBlockHash = burnBlockHash;
  }


  public BurnchainReward burnBlockHeight(Integer burnBlockHeight) {
    
    this.burnBlockHeight = burnBlockHeight;
    return this;
  }

   /**
   * Height of the burnchain block
   * @return burnBlockHeight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Height of the burnchain block")

  public Integer getBurnBlockHeight() {
    return burnBlockHeight;
  }


  public void setBurnBlockHeight(Integer burnBlockHeight) {
    this.burnBlockHeight = burnBlockHeight;
  }


  public BurnchainReward burnAmount(String burnAmount) {
    
    this.burnAmount = burnAmount;
    return this;
  }

   /**
   * The total amount of burnchain tokens burned for this burnchain block, in the smallest unit (e.g. satoshis for Bitcoin)
   * @return burnAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total amount of burnchain tokens burned for this burnchain block, in the smallest unit (e.g. satoshis for Bitcoin)")

  public String getBurnAmount() {
    return burnAmount;
  }


  public void setBurnAmount(String burnAmount) {
    this.burnAmount = burnAmount;
  }


  public BurnchainReward rewardRecipient(String rewardRecipient) {
    
    this.rewardRecipient = rewardRecipient;
    return this;
  }

   /**
   * The recipient address that received the burnchain rewards, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)
   * @return rewardRecipient
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The recipient address that received the burnchain rewards, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)")

  public String getRewardRecipient() {
    return rewardRecipient;
  }


  public void setRewardRecipient(String rewardRecipient) {
    this.rewardRecipient = rewardRecipient;
  }


  public BurnchainReward rewardAmount(String rewardAmount) {
    
    this.rewardAmount = rewardAmount;
    return this;
  }

   /**
   * The amount of burnchain tokens rewarded to the recipient, in the smallest unit (e.g. satoshis for Bitcoin)
   * @return rewardAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The amount of burnchain tokens rewarded to the recipient, in the smallest unit (e.g. satoshis for Bitcoin)")

  public String getRewardAmount() {
    return rewardAmount;
  }


  public void setRewardAmount(String rewardAmount) {
    this.rewardAmount = rewardAmount;
  }


  public BurnchainReward rewardIndex(Integer rewardIndex) {
    
    this.rewardIndex = rewardIndex;
    return this;
  }

   /**
   * The index position of the reward entry, useful for ordering when there&#39;s more than one recipient per burnchain block
   * @return rewardIndex
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The index position of the reward entry, useful for ordering when there's more than one recipient per burnchain block")

  public Integer getRewardIndex() {
    return rewardIndex;
  }


  public void setRewardIndex(Integer rewardIndex) {
    this.rewardIndex = rewardIndex;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BurnchainReward burnchainReward = (BurnchainReward) o;
    return Objects.equals(this.canonical, burnchainReward.canonical) &&
        Objects.equals(this.burnBlockHash, burnchainReward.burnBlockHash) &&
        Objects.equals(this.burnBlockHeight, burnchainReward.burnBlockHeight) &&
        Objects.equals(this.burnAmount, burnchainReward.burnAmount) &&
        Objects.equals(this.rewardRecipient, burnchainReward.rewardRecipient) &&
        Objects.equals(this.rewardAmount, burnchainReward.rewardAmount) &&
        Objects.equals(this.rewardIndex, burnchainReward.rewardIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canonical, burnBlockHash, burnBlockHeight, burnAmount, rewardRecipient, rewardAmount, rewardIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BurnchainReward {\n");
    sb.append("    canonical: ").append(toIndentedString(canonical)).append("\n");
    sb.append("    burnBlockHash: ").append(toIndentedString(burnBlockHash)).append("\n");
    sb.append("    burnBlockHeight: ").append(toIndentedString(burnBlockHeight)).append("\n");
    sb.append("    burnAmount: ").append(toIndentedString(burnAmount)).append("\n");
    sb.append("    rewardRecipient: ").append(toIndentedString(rewardRecipient)).append("\n");
    sb.append("    rewardAmount: ").append(toIndentedString(rewardAmount)).append("\n");
    sb.append("    rewardIndex: ").append(toIndentedString(rewardIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

