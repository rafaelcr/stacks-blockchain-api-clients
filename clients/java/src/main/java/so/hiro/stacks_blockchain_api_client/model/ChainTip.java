/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Current chain tip information
 */
@ApiModel(description = "Current chain tip information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class ChainTip {
  public static final String SERIALIZED_NAME_BLOCK_HEIGHT = "block_height";
  @SerializedName(SERIALIZED_NAME_BLOCK_HEIGHT)
  private Integer blockHeight;

  public static final String SERIALIZED_NAME_BLOCK_HASH = "block_hash";
  @SerializedName(SERIALIZED_NAME_BLOCK_HASH)
  private String blockHash;

  public static final String SERIALIZED_NAME_INDEX_BLOCK_HASH = "index_block_hash";
  @SerializedName(SERIALIZED_NAME_INDEX_BLOCK_HASH)
  private String indexBlockHash;

  public static final String SERIALIZED_NAME_MICROBLOCK_HASH = "microblock_hash";
  @SerializedName(SERIALIZED_NAME_MICROBLOCK_HASH)
  private String microblockHash;

  public static final String SERIALIZED_NAME_MICROBLOCK_SEQUENCE = "microblock_sequence";
  @SerializedName(SERIALIZED_NAME_MICROBLOCK_SEQUENCE)
  private Integer microblockSequence;

  public ChainTip() { 
  }

  public ChainTip blockHeight(Integer blockHeight) {
    
    this.blockHeight = blockHeight;
    return this;
  }

   /**
   * the current block height
   * @return blockHeight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the current block height")

  public Integer getBlockHeight() {
    return blockHeight;
  }


  public void setBlockHeight(Integer blockHeight) {
    this.blockHeight = blockHeight;
  }


  public ChainTip blockHash(String blockHash) {
    
    this.blockHash = blockHash;
    return this;
  }

   /**
   * the current block hash
   * @return blockHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the current block hash")

  public String getBlockHash() {
    return blockHash;
  }


  public void setBlockHash(String blockHash) {
    this.blockHash = blockHash;
  }


  public ChainTip indexBlockHash(String indexBlockHash) {
    
    this.indexBlockHash = indexBlockHash;
    return this;
  }

   /**
   * the current index block hash
   * @return indexBlockHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the current index block hash")

  public String getIndexBlockHash() {
    return indexBlockHash;
  }


  public void setIndexBlockHash(String indexBlockHash) {
    this.indexBlockHash = indexBlockHash;
  }


  public ChainTip microblockHash(String microblockHash) {
    
    this.microblockHash = microblockHash;
    return this;
  }

   /**
   * the current microblock hash
   * @return microblockHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the current microblock hash")

  public String getMicroblockHash() {
    return microblockHash;
  }


  public void setMicroblockHash(String microblockHash) {
    this.microblockHash = microblockHash;
  }


  public ChainTip microblockSequence(Integer microblockSequence) {
    
    this.microblockSequence = microblockSequence;
    return this;
  }

   /**
   * the current microblock sequence number
   * @return microblockSequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the current microblock sequence number")

  public Integer getMicroblockSequence() {
    return microblockSequence;
  }


  public void setMicroblockSequence(Integer microblockSequence) {
    this.microblockSequence = microblockSequence;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChainTip chainTip = (ChainTip) o;
    return Objects.equals(this.blockHeight, chainTip.blockHeight) &&
        Objects.equals(this.blockHash, chainTip.blockHash) &&
        Objects.equals(this.indexBlockHash, chainTip.indexBlockHash) &&
        Objects.equals(this.microblockHash, chainTip.microblockHash) &&
        Objects.equals(this.microblockSequence, chainTip.microblockSequence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockHeight, blockHash, indexBlockHash, microblockHash, microblockSequence);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChainTip {\n");
    sb.append("    blockHeight: ").append(toIndentedString(blockHeight)).append("\n");
    sb.append("    blockHash: ").append(toIndentedString(blockHash)).append("\n");
    sb.append("    indexBlockHash: ").append(toIndentedString(indexBlockHash)).append("\n");
    sb.append("    microblockHash: ").append(toIndentedString(microblockHash)).append("\n");
    sb.append("    microblockSequence: ").append(toIndentedString(microblockSequence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

