/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import so.hiro.stacks_blockchain_api_client.model.AddressNftListResponseValue;

/**
 * NftEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class NftEvent {
  public static final String SERIALIZED_NAME_SENDER = "sender";
  @SerializedName(SERIALIZED_NAME_SENDER)
  private String sender;

  public static final String SERIALIZED_NAME_RECIPIENT = "recipient";
  @SerializedName(SERIALIZED_NAME_RECIPIENT)
  private String recipient;

  public static final String SERIALIZED_NAME_ASSET_IDENTIFIER = "asset_identifier";
  @SerializedName(SERIALIZED_NAME_ASSET_IDENTIFIER)
  private String assetIdentifier;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private AddressNftListResponseValue value;

  public static final String SERIALIZED_NAME_TX_ID = "tx_id";
  @SerializedName(SERIALIZED_NAME_TX_ID)
  private String txId;

  public static final String SERIALIZED_NAME_BLOCK_HEIGHT = "block_height";
  @SerializedName(SERIALIZED_NAME_BLOCK_HEIGHT)
  private BigDecimal blockHeight;

  public NftEvent() { 
  }

  public NftEvent sender(String sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSender() {
    return sender;
  }


  public void setSender(String sender) {
    this.sender = sender;
  }


  public NftEvent recipient(String recipient) {
    
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRecipient() {
    return recipient;
  }


  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }


  public NftEvent assetIdentifier(String assetIdentifier) {
    
    this.assetIdentifier = assetIdentifier;
    return this;
  }

   /**
   * Get assetIdentifier
   * @return assetIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getAssetIdentifier() {
    return assetIdentifier;
  }


  public void setAssetIdentifier(String assetIdentifier) {
    this.assetIdentifier = assetIdentifier;
  }


  public NftEvent value(AddressNftListResponseValue value) {
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AddressNftListResponseValue getValue() {
    return value;
  }


  public void setValue(AddressNftListResponseValue value) {
    this.value = value;
  }


  public NftEvent txId(String txId) {
    
    this.txId = txId;
    return this;
  }

   /**
   * Get txId
   * @return txId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTxId() {
    return txId;
  }


  public void setTxId(String txId) {
    this.txId = txId;
  }


  public NftEvent blockHeight(BigDecimal blockHeight) {
    
    this.blockHeight = blockHeight;
    return this;
  }

   /**
   * Get blockHeight
   * @return blockHeight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getBlockHeight() {
    return blockHeight;
  }


  public void setBlockHeight(BigDecimal blockHeight) {
    this.blockHeight = blockHeight;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NftEvent nftEvent = (NftEvent) o;
    return Objects.equals(this.sender, nftEvent.sender) &&
        Objects.equals(this.recipient, nftEvent.recipient) &&
        Objects.equals(this.assetIdentifier, nftEvent.assetIdentifier) &&
        Objects.equals(this.value, nftEvent.value) &&
        Objects.equals(this.txId, nftEvent.txId) &&
        Objects.equals(this.blockHeight, nftEvent.blockHeight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sender, recipient, assetIdentifier, value, txId, blockHeight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NftEvent {\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    assetIdentifier: ").append(toIndentedString(assetIdentifier)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    blockHeight: ").append(toIndentedString(blockHeight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

