/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import so.hiro.stacks_blockchain_api_client.model.RosettaAccountBalanceResponseMetadata;
import so.hiro.stacks_blockchain_api_client.model.RosettaAmount;
import so.hiro.stacks_blockchain_api_client.model.RosettaCoin;

/**
 * An AccountBalanceResponse is returned on the /account/balance endpoint. If an account has a balance for each AccountIdentifier describing it (ex: an ERC-20 token balance on a few smart contracts), an account balance request must be made with each AccountIdentifier.
 */
@ApiModel(description = "An AccountBalanceResponse is returned on the /account/balance endpoint. If an account has a balance for each AccountIdentifier describing it (ex: an ERC-20 token balance on a few smart contracts), an account balance request must be made with each AccountIdentifier.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class RosettaAccountBalanceResponse {
  public static final String SERIALIZED_NAME_BLOCK_IDENTIFIER = "block_identifier";
  @SerializedName(SERIALIZED_NAME_BLOCK_IDENTIFIER)
  private Object blockIdentifier = null;

  public static final String SERIALIZED_NAME_BALANCES = "balances";
  @SerializedName(SERIALIZED_NAME_BALANCES)
  private List<RosettaAmount> balances = new ArrayList<RosettaAmount>();

  public static final String SERIALIZED_NAME_COINS = "coins";
  @SerializedName(SERIALIZED_NAME_COINS)
  private List<RosettaCoin> coins = null;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private RosettaAccountBalanceResponseMetadata metadata;

  public RosettaAccountBalanceResponse() { 
  }

  public RosettaAccountBalanceResponse blockIdentifier(Object blockIdentifier) {
    
    this.blockIdentifier = blockIdentifier;
    return this;
  }

   /**
   * Get blockIdentifier
   * @return blockIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getBlockIdentifier() {
    return blockIdentifier;
  }


  public void setBlockIdentifier(Object blockIdentifier) {
    this.blockIdentifier = blockIdentifier;
  }


  public RosettaAccountBalanceResponse balances(List<RosettaAmount> balances) {
    
    this.balances = balances;
    return this;
  }

  public RosettaAccountBalanceResponse addBalancesItem(RosettaAmount balancesItem) {
    this.balances.add(balancesItem);
    return this;
  }

   /**
   * A single account balance may have multiple currencies
   * @return balances
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A single account balance may have multiple currencies")

  public List<RosettaAmount> getBalances() {
    return balances;
  }


  public void setBalances(List<RosettaAmount> balances) {
    this.balances = balances;
  }


  public RosettaAccountBalanceResponse coins(List<RosettaCoin> coins) {
    
    this.coins = coins;
    return this;
  }

  public RosettaAccountBalanceResponse addCoinsItem(RosettaCoin coinsItem) {
    if (this.coins == null) {
      this.coins = new ArrayList<RosettaCoin>();
    }
    this.coins.add(coinsItem);
    return this;
  }

   /**
   * If a blockchain is UTXO-based, all unspent Coins owned by an account_identifier should be returned alongside the balance. It is highly recommended to populate this field so that users of the Rosetta API implementation don&#39;t need to maintain their own indexer to track their UTXOs.
   * @return coins
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If a blockchain is UTXO-based, all unspent Coins owned by an account_identifier should be returned alongside the balance. It is highly recommended to populate this field so that users of the Rosetta API implementation don't need to maintain their own indexer to track their UTXOs.")

  public List<RosettaCoin> getCoins() {
    return coins;
  }


  public void setCoins(List<RosettaCoin> coins) {
    this.coins = coins;
  }


  public RosettaAccountBalanceResponse metadata(RosettaAccountBalanceResponseMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RosettaAccountBalanceResponseMetadata getMetadata() {
    return metadata;
  }


  public void setMetadata(RosettaAccountBalanceResponseMetadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RosettaAccountBalanceResponse rosettaAccountBalanceResponse = (RosettaAccountBalanceResponse) o;
    return Objects.equals(this.blockIdentifier, rosettaAccountBalanceResponse.blockIdentifier) &&
        Objects.equals(this.balances, rosettaAccountBalanceResponse.balances) &&
        Objects.equals(this.coins, rosettaAccountBalanceResponse.coins) &&
        Objects.equals(this.metadata, rosettaAccountBalanceResponse.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockIdentifier, balances, coins, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RosettaAccountBalanceResponse {\n");
    sb.append("    blockIdentifier: ").append(toIndentedString(blockIdentifier)).append("\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("    coins: ").append(toIndentedString(coins)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

