/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import so.hiro.stacks_blockchain_api_client.model.RosettaBlockMetadata;
import so.hiro.stacks_blockchain_api_client.model.RosettaParentBlockIdentifier;

/**
 * Blocks contain an array of Transactions that occurred at a particular BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations is that they MUST be inalterable: once a client has requested and received a block identified by a specific BlockIndentifier, all future calls for that same BlockIdentifier must return the same block contents.
 */
@ApiModel(description = "Blocks contain an array of Transactions that occurred at a particular BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations is that they MUST be inalterable: once a client has requested and received a block identified by a specific BlockIndentifier, all future calls for that same BlockIdentifier must return the same block contents.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class RosettaBlock {
  public static final String SERIALIZED_NAME_BLOCK_IDENTIFIER = "block_identifier";
  @SerializedName(SERIALIZED_NAME_BLOCK_IDENTIFIER)
  private Object blockIdentifier = null;

  public static final String SERIALIZED_NAME_PARENT_BLOCK_IDENTIFIER = "parent_block_identifier";
  @SerializedName(SERIALIZED_NAME_PARENT_BLOCK_IDENTIFIER)
  private RosettaParentBlockIdentifier parentBlockIdentifier;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private Integer timestamp;

  public static final String SERIALIZED_NAME_TRANSACTIONS = "transactions";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS)
  private List<Object> transactions = new ArrayList<Object>();

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private RosettaBlockMetadata metadata;

  public RosettaBlock() { 
  }

  public RosettaBlock blockIdentifier(Object blockIdentifier) {
    
    this.blockIdentifier = blockIdentifier;
    return this;
  }

   /**
   * Get blockIdentifier
   * @return blockIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getBlockIdentifier() {
    return blockIdentifier;
  }


  public void setBlockIdentifier(Object blockIdentifier) {
    this.blockIdentifier = blockIdentifier;
  }


  public RosettaBlock parentBlockIdentifier(RosettaParentBlockIdentifier parentBlockIdentifier) {
    
    this.parentBlockIdentifier = parentBlockIdentifier;
    return this;
  }

   /**
   * Get parentBlockIdentifier
   * @return parentBlockIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public RosettaParentBlockIdentifier getParentBlockIdentifier() {
    return parentBlockIdentifier;
  }


  public void setParentBlockIdentifier(RosettaParentBlockIdentifier parentBlockIdentifier) {
    this.parentBlockIdentifier = parentBlockIdentifier;
  }


  public RosettaBlock timestamp(Integer timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
   * @return timestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.")

  public Integer getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }


  public RosettaBlock transactions(List<Object> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public RosettaBlock addTransactionsItem(Object transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * All the transactions in the block
   * @return transactions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "All the transactions in the block")

  public List<Object> getTransactions() {
    return transactions;
  }


  public void setTransactions(List<Object> transactions) {
    this.transactions = transactions;
  }


  public RosettaBlock metadata(RosettaBlockMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RosettaBlockMetadata getMetadata() {
    return metadata;
  }


  public void setMetadata(RosettaBlockMetadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RosettaBlock rosettaBlock = (RosettaBlock) o;
    return Objects.equals(this.blockIdentifier, rosettaBlock.blockIdentifier) &&
        Objects.equals(this.parentBlockIdentifier, rosettaBlock.parentBlockIdentifier) &&
        Objects.equals(this.timestamp, rosettaBlock.timestamp) &&
        Objects.equals(this.transactions, rosettaBlock.transactions) &&
        Objects.equals(this.metadata, rosettaBlock.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockIdentifier, parentBlockIdentifier, timestamp, transactions, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RosettaBlock {\n");
    sb.append("    blockIdentifier: ").append(toIndentedString(blockIdentifier)).append("\n");
    sb.append("    parentBlockIdentifier: ").append(toIndentedString(parentBlockIdentifier)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

