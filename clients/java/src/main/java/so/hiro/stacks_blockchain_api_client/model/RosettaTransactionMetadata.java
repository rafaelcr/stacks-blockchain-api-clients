/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Transactions that are related to other transactions (like a cross-shard transaction) should include the tranaction_identifier of these transactions in the metadata.
 */
@ApiModel(description = "Transactions that are related to other transactions (like a cross-shard transaction) should include the tranaction_identifier of these transactions in the metadata.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-14T17:31:43.521-05:00[America/Monterrey]")
public class RosettaTransactionMetadata {
  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Integer size;

  public static final String SERIALIZED_NAME_LOCK_TIME = "lockTime";
  @SerializedName(SERIALIZED_NAME_LOCK_TIME)
  private Integer lockTime;

  public RosettaTransactionMetadata() { 
  }

  public RosettaTransactionMetadata memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * STX token transfer memo.
   * @return memo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "STX token transfer memo.")

  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  public RosettaTransactionMetadata size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * The Size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Size")

  public Integer getSize() {
    return size;
  }


  public void setSize(Integer size) {
    this.size = size;
  }


  public RosettaTransactionMetadata lockTime(Integer lockTime) {
    
    this.lockTime = lockTime;
    return this;
  }

   /**
   * The locktime
   * @return lockTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The locktime")

  public Integer getLockTime() {
    return lockTime;
  }


  public void setLockTime(Integer lockTime) {
    this.lockTime = lockTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RosettaTransactionMetadata rosettaTransactionMetadata = (RosettaTransactionMetadata) o;
    return Objects.equals(this.memo, rosettaTransactionMetadata.memo) &&
        Objects.equals(this.size, rosettaTransactionMetadata.size) &&
        Objects.equals(this.lockTime, rosettaTransactionMetadata.lockTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memo, size, lockTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RosettaTransactionMetadata {\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    lockTime: ").append(toIndentedString(lockTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

