/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.api;

import so.hiro.stacks_blockchain_api_client.ApiException;
import so.hiro.stacks_blockchain_api_client.model.FungibleTokenMetadata;
import so.hiro.stacks_blockchain_api_client.model.FungibleTokensMetadataList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FungibleTokensApi
 */
@Ignore
public class FungibleTokensApiTest {

    private final FungibleTokensApi api = new FungibleTokensApi();

    
    /**
     * Fungible tokens metadata for contract id
     *
     * Retrieves the metadata for fungible tokens for a given contract id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractFtMetadataTest() throws ApiException {
        String contractId = null;
                FungibleTokenMetadata response = api.getContractFtMetadata(contractId);
        // TODO: test validations
    }
    
    /**
     * Fungible tokens metadata list
     *
     * Retrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFtMetadataListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
                FungibleTokensMetadataList response = api.getFtMetadataList(limit, offset);
        // TODO: test validations
    }
    
}
