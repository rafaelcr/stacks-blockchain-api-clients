/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CoreNodeInfoResponse
 */
public class CoreNodeInfoResponseTest {
    private final CoreNodeInfoResponse model = new CoreNodeInfoResponse();

    /**
     * Model tests for CoreNodeInfoResponse
     */
    @Test
    public void testCoreNodeInfoResponse() {
        // TODO: test CoreNodeInfoResponse
    }

    /**
     * Test the property 'peerVersion'
     */
    @Test
    public void peerVersionTest() {
        // TODO: test peerVersion
    }

    /**
     * Test the property 'poxConsensus'
     */
    @Test
    public void poxConsensusTest() {
        // TODO: test poxConsensus
    }

    /**
     * Test the property 'burnBlockHeight'
     */
    @Test
    public void burnBlockHeightTest() {
        // TODO: test burnBlockHeight
    }

    /**
     * Test the property 'stablePoxConsensus'
     */
    @Test
    public void stablePoxConsensusTest() {
        // TODO: test stablePoxConsensus
    }

    /**
     * Test the property 'stableBurnBlockHeight'
     */
    @Test
    public void stableBurnBlockHeightTest() {
        // TODO: test stableBurnBlockHeight
    }

    /**
     * Test the property 'serverVersion'
     */
    @Test
    public void serverVersionTest() {
        // TODO: test serverVersion
    }

    /**
     * Test the property 'networkId'
     */
    @Test
    public void networkIdTest() {
        // TODO: test networkId
    }

    /**
     * Test the property 'parentNetworkId'
     */
    @Test
    public void parentNetworkIdTest() {
        // TODO: test parentNetworkId
    }

    /**
     * Test the property 'stacksTipHeight'
     */
    @Test
    public void stacksTipHeightTest() {
        // TODO: test stacksTipHeight
    }

    /**
     * Test the property 'stacksTip'
     */
    @Test
    public void stacksTipTest() {
        // TODO: test stacksTip
    }

    /**
     * Test the property 'stacksTipConsensusHash'
     */
    @Test
    public void stacksTipConsensusHashTest() {
        // TODO: test stacksTipConsensusHash
    }

    /**
     * Test the property 'unanchoredTip'
     */
    @Test
    public void unanchoredTipTest() {
        // TODO: test unanchoredTip
    }

    /**
     * Test the property 'exitAtBlockHeight'
     */
    @Test
    public void exitAtBlockHeightTest() {
        // TODO: test exitAtBlockHeight
    }

}
