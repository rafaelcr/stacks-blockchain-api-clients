/*
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: v3.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package so.hiro.stacks_blockchain_api_client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Microblock
 */
public class MicroblockTest {
    private final Microblock model = new Microblock();

    /**
     * Model tests for Microblock
     */
    @Test
    public void testMicroblock() {
        // TODO: test Microblock
    }

    /**
     * Test the property 'canonical'
     */
    @Test
    public void canonicalTest() {
        // TODO: test canonical
    }

    /**
     * Test the property 'microblockCanonical'
     */
    @Test
    public void microblockCanonicalTest() {
        // TODO: test microblockCanonical
    }

    /**
     * Test the property 'microblockHash'
     */
    @Test
    public void microblockHashTest() {
        // TODO: test microblockHash
    }

    /**
     * Test the property 'microblockSequence'
     */
    @Test
    public void microblockSequenceTest() {
        // TODO: test microblockSequence
    }

    /**
     * Test the property 'microblockParentHash'
     */
    @Test
    public void microblockParentHashTest() {
        // TODO: test microblockParentHash
    }

    /**
     * Test the property 'blockHeight'
     */
    @Test
    public void blockHeightTest() {
        // TODO: test blockHeight
    }

    /**
     * Test the property 'parentBlockHeight'
     */
    @Test
    public void parentBlockHeightTest() {
        // TODO: test parentBlockHeight
    }

    /**
     * Test the property 'parentBlockHash'
     */
    @Test
    public void parentBlockHashTest() {
        // TODO: test parentBlockHash
    }

    /**
     * Test the property 'parentBurnBlockHash'
     */
    @Test
    public void parentBurnBlockHashTest() {
        // TODO: test parentBurnBlockHash
    }

    /**
     * Test the property 'parentBurnBlockTime'
     */
    @Test
    public void parentBurnBlockTimeTest() {
        // TODO: test parentBurnBlockTime
    }

    /**
     * Test the property 'parentBurnBlockTimeIso'
     */
    @Test
    public void parentBurnBlockTimeIsoTest() {
        // TODO: test parentBurnBlockTimeIso
    }

    /**
     * Test the property 'parentBurnBlockHeight'
     */
    @Test
    public void parentBurnBlockHeightTest() {
        // TODO: test parentBurnBlockHeight
    }

    /**
     * Test the property 'blockHash'
     */
    @Test
    public void blockHashTest() {
        // TODO: test blockHash
    }

    /**
     * Test the property 'txs'
     */
    @Test
    public void txsTest() {
        // TODO: test txs
    }

}
