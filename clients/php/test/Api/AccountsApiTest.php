<?php
/**
 * AccountsApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  StacksBlockchainApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Stacks Blockchain API
 *
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: v3.0.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace StacksBlockchainApi\Test\Api;

use \StacksBlockchainApi\Configuration;
use \StacksBlockchainApi\ApiException;
use \StacksBlockchainApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AccountsApiTest Class Doc Comment
 *
 * @category Class
 * @package  StacksBlockchainApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AccountsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getAccountAssets
     *
     * Get account assets.
     *
     */
    public function testGetAccountAssets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountBalance
     *
     * Get account balances.
     *
     */
    public function testGetAccountBalance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountInbound
     *
     * Get inbound STX transfers.
     *
     */
    public function testGetAccountInbound()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountInfo
     *
     * Get account info.
     *
     */
    public function testGetAccountInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountNft
     *
     * Get nft events.
     *
     */
    public function testGetAccountNft()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountNonces
     *
     * Get the latest nonce used by an account.
     *
     */
    public function testGetAccountNonces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountStxBalance
     *
     * Get account STX balance.
     *
     */
    public function testGetAccountStxBalance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountTransactions
     *
     * Get account transactions.
     *
     */
    public function testGetAccountTransactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountTransactionsWithTransfers
     *
     * Get account transactions including STX transfers for each transaction..
     *
     */
    public function testGetAccountTransactionsWithTransfers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSingleTransactionWithTransfers
     *
     * Get account transaction information for specific transaction.
     *
     */
    public function testGetSingleTransactionWithTransfers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
