<?php
/**
 * TransactionsApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  StacksBlockchainApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Stacks Blockchain API
 *
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a>
 *
 * The version of the OpenAPI document: v3.0.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace StacksBlockchainApi\Test\Api;

use \StacksBlockchainApi\Configuration;
use \StacksBlockchainApi\ApiException;
use \StacksBlockchainApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TransactionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  StacksBlockchainApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TransactionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getAddressMempoolTransactions
     *
     * Transactions for address.
     *
     */
    public function testGetAddressMempoolTransactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDroppedMempoolTransactionList
     *
     * Get dropped mempool transactions.
     *
     */
    public function testGetDroppedMempoolTransactionList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMempoolTransactionList
     *
     * Get mempool transactions.
     *
     */
    public function testGetMempoolTransactionList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRawTransactionById
     *
     * Get Raw Transaction.
     *
     */
    public function testGetRawTransactionById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionById
     *
     * Get transaction.
     *
     */
    public function testGetTransactionById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionList
     *
     * Get recent transactions.
     *
     */
    public function testGetTransactionList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionsByBlockHash
     *
     * Transactions by block hash.
     *
     */
    public function testGetTransactionsByBlockHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionsByBlockHeight
     *
     * Transactions by block height.
     *
     */
    public function testGetTransactionsByBlockHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTxListDetails
     *
     * Get list of details for transactions.
     *
     */
    public function testGetTxListDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCoreNodeTransactions
     *
     * Broadcast raw transaction.
     *
     */
    public function testPostCoreNodeTransactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
