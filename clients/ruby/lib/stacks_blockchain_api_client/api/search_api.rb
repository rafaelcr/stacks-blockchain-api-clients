=begin
#Stacks Blockchain API

#Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

The version of the OpenAPI document: v3.0.3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'cgi'

module StacksBlockchainApi
  class SearchApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Search
    # Search blocks, transactions, contracts, or accounts by hash/ID
    # @param id [String] The hex hash string for a block or transaction, account address, or contract address
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :include_metadata This includes the detailed data for purticular hash in the response
    # @return [AnyOfobjectobject]
    def search_by_id(id, opts = {})
      data, _status_code, _headers = search_by_id_with_http_info(id, opts)
      data
    end

    # Search
    # Search blocks, transactions, contracts, or accounts by hash/ID
    # @param id [String] The hex hash string for a block or transaction, account address, or contract address
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :include_metadata This includes the detailed data for purticular hash in the response
    # @return [Array<(AnyOfobjectobject, Integer, Hash)>] AnyOfobjectobject data, response status code and response headers
    def search_by_id_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SearchApi.search_by_id ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SearchApi.search_by_id"
      end
      # resource path
      local_var_path = '/extended/v1/search/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'include_metadata'] = opts[:'include_metadata'] if !opts[:'include_metadata'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AnyOfobjectobject'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"SearchApi.search_by_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SearchApi#search_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
