=begin
#Stacks Blockchain API

#Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

The version of the OpenAPI document: v3.0.3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for StacksBlockchainApi::InfoApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'InfoApi' do
  before do
    # run before each test
    @api_instance = StacksBlockchainApi::InfoApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InfoApi' do
    it 'should create an instance of InfoApi' do
      expect(@api_instance).to be_instance_of(StacksBlockchainApi::InfoApi)
    end
  end

  # unit tests for get_core_api_info
  # Get Core API info
  # Retrieves information about the Core API including the server version
  # @param [Hash] opts the optional parameters
  # @return [CoreNodeInfoResponse]
  describe 'get_core_api_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_network_block_time_by_network
  # Get a given network&#39;s target block time
  # Retrieves the target block time for a given network. The network can be mainnet or testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.
  # @param network Which network to retrieve the target block time of
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_network_block_time_by_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_network_block_times
  # Get the network target block time
  # Retrieves the target block times for mainnet and testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.
  # @param [Hash] opts the optional parameters
  # @return [NetworkBlockTimesResponse]
  describe 'get_network_block_times test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pox_info
  # Get Proof-of-Transfer details
  # Retrieves Proof-of-Transfer (PoX) information. Can be used for Stacking.
  # @param [Hash] opts the optional parameters
  # @return [CoreNodePoxResponse]
  describe 'get_pox_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_status
  # API status
  # Retrieves the running status of the Stacks Blockchain API, including the server version and current chain tip information.
  # @param [Hash] opts the optional parameters
  # @return [ServerStatusResponse]
  describe 'get_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_stx_supply
  # Get total and unlocked STX supply
  # Retrieves the total and unlocked STX supply. More information on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking).
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :height The block height at which to query supply details from, if not provided then the latest block height is used
  # @return [GetStxSupplyResponse]
  describe 'get_stx_supply test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_stx_supply_circulating_plain
  # Get circulating STX supply in plain text format
  # Retrieves the STX tokens currently in circulation that have been unlocked as plain text.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_stx_supply_circulating_plain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_stx_supply_total_supply_plain
  # Get total STX supply in plain text format
  # Retrieves the total supply for STX tokens as plain text.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_stx_supply_total_supply_plain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_total_stx_supply_legacy_format
  # Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)
  # Retrieves total supply of STX tokens including those currently in circulation that have been unlocked.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :height The block height at which to query supply details from, if not provided then the latest block height is used
  # @return [GetStxSupplyLegacyFormatResponse]
  describe 'get_total_stx_supply_legacy_format test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
