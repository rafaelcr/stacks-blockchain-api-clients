//
// NetworkIdentifier.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The network_identifier specifies which network a particular object is associated with. */
public struct NetworkIdentifier: Codable, JSONEncodable, Hashable {

    /** Blockchain name */
    public var blockchain: String
    /** If a blockchain has a specific chain-id or network identifier, it should go in this field. It is up to the client to determine which network-specific identifier is mainnet or testnet. */
    public var network: String
    public var subNetworkIdentifier: RosettaNetworkListResponseSubNetworkIdentifier?

    public init(blockchain: String, network: String, subNetworkIdentifier: RosettaNetworkListResponseSubNetworkIdentifier? = nil) {
        self.blockchain = blockchain
        self.network = network
        self.subNetworkIdentifier = subNetworkIdentifier
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case blockchain
        case network
        case subNetworkIdentifier = "sub_network_identifier"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(blockchain, forKey: .blockchain)
        try container.encode(network, forKey: .network)
        try container.encodeIfPresent(subNetworkIdentifier, forKey: .subNetworkIdentifier)
    }
}

