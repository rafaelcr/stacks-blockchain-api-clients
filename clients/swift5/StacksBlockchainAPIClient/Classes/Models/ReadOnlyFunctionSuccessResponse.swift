//
// ReadOnlyFunctionSuccessResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** GET request to get contract source */
public struct ReadOnlyFunctionSuccessResponse: Codable, JSONEncodable, Hashable {

    public var okay: Bool
    public var result: String?
    public var cause: String?

    public init(okay: Bool, result: String? = nil, cause: String? = nil) {
        self.okay = okay
        self.result = result
        self.cause = cause
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case okay
        case result
        case cause
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(okay, forKey: .okay)
        try container.encodeIfPresent(result, forKey: .result)
        try container.encodeIfPresent(cause, forKey: .cause)
    }
}

