//
// RosettaAccountBalanceResponseCoinIdentifier.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** CoinIdentifier uniquely identifies a Coin. */
public struct RosettaAccountBalanceResponseCoinIdentifier: Codable, JSONEncodable, Hashable {

    /** Identifier should be populated with a globally unique identifier of a Coin. In Bitcoin, this identifier would be transaction_hash:index. */
    public var identifier: String

    public init(identifier: String) {
        self.identifier = identifier
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case identifier
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(identifier, forKey: .identifier)
    }
}

