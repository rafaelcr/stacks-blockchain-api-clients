//
// RosettaConstructionParseRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Parse is called on both unsigned and signed transactions to understand the intent of the formulated transaction. This is run as a sanity check before signing (after /construction/payloads) and before broadcast (after /construction/combine). */
public struct RosettaConstructionParseRequest: Codable, JSONEncodable, Hashable {

    public var networkIdentifier: AnyCodable
    /** Signed is a boolean indicating whether the transaction is signed. */
    public var signed: Bool
    /** This must be either the unsigned transaction blob returned by /construction/payloads or the signed transaction blob returned by /construction/combine. */
    public var transaction: String

    public init(networkIdentifier: AnyCodable, signed: Bool, transaction: String) {
        self.networkIdentifier = networkIdentifier
        self.signed = signed
        self.transaction = transaction
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case networkIdentifier = "network_identifier"
        case signed
        case transaction
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(networkIdentifier, forKey: .networkIdentifier)
        try container.encode(signed, forKey: .signed)
        try container.encode(transaction, forKey: .transaction)
    }
}

