//
// RosettaPublicKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** PublicKey contains a public key byte array for a particular CurveType encoded in hex. Note that there is no PrivateKey struct as this is NEVER the concern of an implementation. */
public struct RosettaPublicKey: Codable, JSONEncodable, Hashable {

    public enum CurveType: String, Codable, CaseIterable {
        case secp256k1 = "secp256k1"
        case edwards25519 = "edwards25519"
    }
    /** Hex-encoded public key bytes in the format specified by the CurveType. */
    public var hexBytes: String
    /** CurveType is the type of cryptographic curve associated with a PublicKey. */
    public var curveType: CurveType

    public init(hexBytes: String, curveType: CurveType) {
        self.hexBytes = hexBytes
        self.curveType = curveType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hexBytes = "hex_bytes"
        case curveType = "curve_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(hexBytes, forKey: .hexBytes)
        try container.encode(curveType, forKey: .curveType)
    }
}

