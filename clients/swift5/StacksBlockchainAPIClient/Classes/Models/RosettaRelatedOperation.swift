//
// RosettaRelatedOperation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Restrict referenced related_operations to identifier indexes &lt; the current operation_identifier.index. This ensures there exists a clear DAG-structure of relations. Since operations are one-sided, one could imagine relating operations in a single transfer or linking operations in a call tree. */
public struct RosettaRelatedOperation: Codable, JSONEncodable, Hashable {

    /** Describes the index of related operation. */
    public var index: Int
    /** Some blockchains specify an operation index that is essential for client use. network_index should not be populated if there is no notion of an operation index in a blockchain (typically most account-based blockchains). */
    public var networkIndex: Int?

    public init(index: Int, networkIndex: Int? = nil) {
        self.index = index
        self.networkIndex = networkIndex
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case index
        case networkIndex = "network_index"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(index, forKey: .index)
        try container.encodeIfPresent(networkIndex, forKey: .networkIndex)
    }
}

